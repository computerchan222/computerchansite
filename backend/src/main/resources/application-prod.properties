# Production configuration for Railway
server.port=${PORT:8080}

# Railway PostgreSQL - Database configuration handled by RailwayDatabaseConfig.java
# This automatically converts postgresql:// to jdbc:postgresql:// and sets credentials

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Connection pool settings for Railway
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=5

# Subsquid Database - Use same database if not specified separately
subsquid.db.url=${SUBSQUID_DATABASE_URL:${DATABASE_URL}}
subsquid.db.username=${SUBSQUID_DATABASE_USER:${PGUSER}}
subsquid.db.password=${SUBSQUID_DATABASE_PASSWORD:${PGPASSWORD}}

# CORS Configuration - update with your actual frontend URL
spring.web.cors.allowed-origins=${FRONTEND_URL:http://localhost:3000},http://localhost:5173,http://localhost:5500
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# Logging
logging.level.com.yourapp=INFO
logging.level.org.springframework.web=INFO
